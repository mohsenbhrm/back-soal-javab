// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoalJavab.DataLayer;

namespace SoalJavab.DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SoalJavab.DomainClasses.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ApplicationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<bool>("Ban");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Family");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<DateTimeOffset?>("LastLoggedIn");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<bool>("NewReg");

                    b.Property<string>("Passs");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("Regdate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(450);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<DateTimeOffset?>("oldLoggedIn");

                    b.Property<DateTime>("visitedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Ban = false,
                            DisplayName = "mohsen bahrami",
                            Family = "bahrami",
                            IsActive = true,
                            Name = "mohsen",
                            NewReg = true,
                            Passs = "1234",
                            Password = "1234",
                            Regdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "mohsen",
                            visitedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Javab", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("Isvisited");

                    b.Property<string>("Matn");

                    b.Property<DateTime>("RegDate");

                    b.Property<long?>("SoalId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SoalId");

                    b.HasIndex("UserId");

                    b.ToTable("Javabs");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.JavabLike", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("JavabId");

                    b.Property<long?>("UserId");

                    b.Property<DateTime>("regdate");

                    b.HasKey("Id");

                    b.HasIndex("JavabId");

                    b.HasIndex("UserId");

                    b.ToTable("JavabLikes");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReportJavab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVisited");

                    b.Property<long?>("JavabId");

                    b.Property<string>("Matn");

                    b.Property<DateTime>("RegDate");

                    b.Property<int?>("ReportTypeId");

                    b.Property<long?>("SoalId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("JavabId");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("SoalId");

                    b.HasIndex("UserId");

                    b.ToTable("ReportJavabs");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReportSoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVisited");

                    b.Property<string>("Matn");

                    b.Property<DateTime>("RegDate");

                    b.Property<int?>("ReportTypeId");

                    b.Property<long?>("SoalId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("SoalId");

                    b.HasIndex("UserId");

                    b.ToTable("ReportSoals");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Onvan");

                    b.HasKey("Id");

                    b.ToTable("ReportTypes");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReportUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVisited");

                    b.Property<string>("Matn");

                    b.Property<DateTime>("RegDate");

                    b.Property<int?>("ReportTypeId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("ReportUsers");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Reshteh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVisited");

                    b.Property<string>("Onvan");

                    b.Property<DateTime?>("Regdat");

                    b.HasKey("Id");

                    b.ToTable("Reshtehs");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReshtehUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ApplicationUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ZirReshtehId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ZirReshtehId");

                    b.ToTable("ReshtehUsers");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Sath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Onvan");

                    b.HasKey("Id");

                    b.ToTable("Saths");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.SathUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ApplicationUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("SathId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("SathId");

                    b.ToTable("SathUsers");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Soal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ApplicationUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVisited");

                    b.Property<string>("Matn");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Regdat");

                    b.Property<byte[]>("RowVersion");

                    b.Property<long>("ZirReshtehId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ZirReshtehId");

                    b.ToTable("Soals");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.SoalFollower", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ApplicationUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("SoalId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("SoalId");

                    b.ToTable("SoalFollowers");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.SoalToUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsVisited");

                    b.Property<bool>("Isanswered");

                    b.Property<bool>("Isdeleted");

                    b.Property<long?>("SoalId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SoalId");

                    b.HasIndex("UserId");

                    b.ToTable("SoalToUsers");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Onvan");

                    b.Property<long>("ZirReshtehId");

                    b.HasKey("Id");

                    b.HasIndex("ZirReshtehId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.TagSoal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Isdeleted");

                    b.Property<long?>("SoalId");

                    b.Property<long>("TagId");

                    b.HasKey("Id");

                    b.HasIndex("SoalId");

                    b.HasIndex("TagId");

                    b.ToTable("TagSoals");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.UserRole", b =>
                {
                    b.Property<long>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RoleId");

                    b.Property<long>("UserId");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("AccessTokenExpiresDateTime");

                    b.Property<string>("AccessTokenHash");

                    b.Property<DateTimeOffset>("RefreshTokenExpiresDateTime");

                    b.Property<string>("RefreshTokenIdHash")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<string>("RefreshTokenIdHashSource")
                        .HasMaxLength(450);

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ZirReshteh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsVisited");

                    b.Property<string>("Onvan");

                    b.Property<DateTime?>("Regdat");

                    b.Property<long?>("ReshtehId");

                    b.HasKey("Id");

                    b.HasIndex("ReshtehId");

                    b.ToTable("ZirReshtehs");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ApplicationUser", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Address", "Address")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Javab", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Soal", "Soal")
                        .WithMany("Javab")
                        .HasForeignKey("SoalId");

                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("Javab")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.JavabLike", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Javab", "Javab")
                        .WithMany("JavabLike")
                        .HasForeignKey("JavabId");

                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("JavabLike")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReportJavab", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Javab")
                        .WithMany("ReportJavab")
                        .HasForeignKey("JavabId");

                    b.HasOne("SoalJavab.DomainClasses.ReportType", "ReportType")
                        .WithMany("ReportJavab")
                        .HasForeignKey("ReportTypeId");

                    b.HasOne("SoalJavab.DomainClasses.Soal", "Soal")
                        .WithMany()
                        .HasForeignKey("SoalId");

                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("ReportJavab")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReportSoal", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ReportType", "ReportType")
                        .WithMany("ReportSoal")
                        .HasForeignKey("ReportTypeId");

                    b.HasOne("SoalJavab.DomainClasses.Soal", "Soal")
                        .WithMany("ReportSoal")
                        .HasForeignKey("SoalId");

                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("ReportSoal")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReportUser", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ReportType", "ReportType")
                        .WithMany("ReportUser")
                        .HasForeignKey("ReportTypeId");

                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("ReportUser")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ReshtehUser", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("ReshtehUser")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoalJavab.DomainClasses.ZirReshteh", "ZirReshteh")
                        .WithMany("ReshtehUser")
                        .HasForeignKey("ZirReshtehId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.SathUser", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("SathUser")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoalJavab.DomainClasses.Sath", "Sath")
                        .WithMany("SathUser")
                        .HasForeignKey("SathId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Soal", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("Soal")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoalJavab.DomainClasses.ZirReshteh", "ZirReshteh")
                        .WithMany("Soal")
                        .HasForeignKey("ZirReshtehId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.SoalFollower", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "ApplicationUser")
                        .WithMany("SoalFollower")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("SoalJavab.DomainClasses.Soal", "Soal")
                        .WithMany("SoalFollower")
                        .HasForeignKey("SoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.SoalToUser", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Soal", "Soal")
                        .WithMany("SoalToUser")
                        .HasForeignKey("SoalId");

                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("SoalToUser")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.Tag", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ZirReshteh", "ZirReshteh")
                        .WithMany("Tag")
                        .HasForeignKey("ZirReshtehId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.TagSoal", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Soal", "Soal")
                        .WithMany("TagSoal")
                        .HasForeignKey("SoalId");

                    b.HasOne("SoalJavab.DomainClasses.Tag", "Tag")
                        .WithMany("TagSoal")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.UserRole", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.UserToken", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.ApplicationUser", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoalJavab.DomainClasses.ZirReshteh", b =>
                {
                    b.HasOne("SoalJavab.DomainClasses.Reshteh", "Reshteh")
                        .WithMany("ZirReshteh")
                        .HasForeignKey("ReshtehId");
                });
#pragma warning restore 612, 618
        }
    }
}
